pipeline {
    agent any

    environment {
        DOCKER_IMAGE    = 'earth12346789/fastapi-webhook:latest' // Replace with your Docker image
        REMOTE_HOST     = 'earth247god@34.126.181.187' // Replace with your actual username and remote IP
        SSH_CREDENTIALS = 'instance' // Jenkins stored SSH credentials ID
    }

    stages {
        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKERHUB_PASSWORD', usernameVariable: 'DOCKERHUB_USER')]) {
                    // Login to Docker Hub using the stored credentials
                    sh 'echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USER --password-stdin'
                }
            }
        }

        stage('Run Docker on Remote Server') {
            steps {
                sshagent([SSH_CREDENTIALS]) {
                    // Stop and remove containers (ignore errors if none exist)
                    sh "ssh -o StrictHostKeyChecking=no $REMOTE_HOST 'docker stop \$(docker ps -q) || true'"
                    sh "ssh -o StrictHostKeyChecking=no $REMOTE_HOST 'docker rm \$(docker ps -a -q) || true'"

                    // Remove all images (use -f to avoid errors on unused images)
                    sh "ssh -o StrictHostKeyChecking=no $REMOTE_HOST 'docker rmi -f \$(docker images -q) || true'"

                    // Run the new Docker container
                    sh "ssh -o StrictHostKeyChecking=no $REMOTE_HOST 'docker run -d --name fastapi-webhook -p 8085:80 $DOCKER_IMAGE'"

                    // List all containers to verify
                    sh "ssh -o StrictHostKeyChecking=no $REMOTE_HOST 'docker ps -a'"
                }
            }
        }
    }
}
